# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
    - name: Execute test and code quality
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar jacoco:check --file pom.xml -Dsonar.projectKey=romainsessa_m2i-api-2025
    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
    - name: Commit the Jacoco badge (if it changed) # the generated badges have to be committed in order to be available on the readme.md file
      run: |
        if [[ `git status --porcelain *.svg` ]]; then
          git config --global user.name 'FutRR'
          git config --global user.email 'futterermaxime@gmail.com'
          git add *.svg
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml
    - name: Docker login
      uses: docker/login-action@v3.5.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v6.18.0
      with:
        file: ./Dockerfile
        push: true
      
        
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml
    - name: Download JAR
      uses: actions/upload-artifact@v4.6.2
      with:
        name: jarToDownload
        path: target/*.jar
    - name: Build and analyze

      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=FutRR_springboot-devops

